The GET /api/v1/analyses endpoint returns a list of analysis dictionaries. Here's what it returns:

  API Flow:

  1. Endpoint: GET /api/v1/analyses?limit={optional_limit}
  2. Server: Calls analysis_service.list_all(limit=limit)
  3. Service:
    - Gets all analyses from the store (up to limit)
    - Converts each analysis to dictionary format
    - Returns list of dictionaries
  4. Store: Retrieves from SQLite, ordered by created_at DESC

  Each analysis dictionary contains:

  Core fields:
  - analysis_id: Unique identifier
  - transcript_id: Associated transcript ID
  - primary_intent: Main reason for the call
  - urgency_level: Priority level
  - confidence_score: Analysis confidence (0-1)

  Sentiment & Behavior:
  - borrower_sentiment: Overall sentiment analysis
  - escalation_needed: Boolean flag
  - issue_resolved: Boolean flag
  - first_call_resolution: Boolean flag

  Risk Scores (0-1):
  - borrower_risks:
    - delinquency_risk
    - churn_risk
    - complaint_risk
    - refinance_likelihood

  Advisor Metrics (0-1):
  - advisor_metrics:
    - empathy_score
    - compliance_adherence
    - solution_effectiveness

  Compliance:
  - compliance_flags: List of compliance issues
  - compliance_issues: Count of issues

  Additional fields:
  - Full analysis data as JSON
  - created_at: Timestamp

  Example response structure:

  [
    {
      "analysis_id": "ANALYSIS_CALL_123",
      "transcript_id": "CALL_123",
      "primary_intent": "Payment Arrangement",
      "urgency_level": "High",
      "borrower_sentiment": {"overall": "Frustrated"},
      "borrower_risks": {
        "delinquency_risk": 0.8,
        "churn_risk": 0.6,
        ...
      },
      "advisor_metrics": {...},
      ...
    },
    ...
  ]

  The endpoint returns the raw analysis data as stored in the database, with all fields preserved from the LLM analysis.

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
> 
───────────────────────────